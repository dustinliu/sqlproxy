plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
    id 'application'
    id "com.google.protobuf" version "0.8.17"
    id "groovy"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.30'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.30'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    implementation 'io.netty:netty-all:4.1.67.Final'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.protobuf:protobuf-java:3.17.3'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'io.github.microutils:kotlin-logging:2.0.11'
    implementation 'com.sksamuel.hoplite:hoplite-core:1.4.7'
    implementation 'com.zaxxer:HikariCP:5.0.0'
    runtimeOnly 'com.sksamuel.hoplite:hoplite-yaml:1.4.7'
    runtimeOnly 'ch.qos.logback:logback-core:1.2.5'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.5'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.5.21'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'org.jetbrains.exposed:exposed:0.17.13'
    testRuntimeOnly 'org.xerial:sqlite-jdbc:3.36.0.2'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

application {
    mainClass.set('sqlproxy.server.SQLProxyKt')
}

sourceSets {
    main {
        java {
            srcDir 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.17.3'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task logInfo {
    logging.captureStandardOutput LogLevel.WARN
}

//detekt {
//    failFast = true // fail build on any finding
//    buildUponDefaultConfig = true // preconfigure defaults
//    config = files("$projectDir/config/detekt.yml")
//
//    reports {
//        html.enabled = true
//        xml.enabled = false
//        txt.enabled = true
//    }
//}
